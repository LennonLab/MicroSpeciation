labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:5)*50) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
# Allele 1 is recessive
gen <- 300
p <- 0.01 # frequency of allele 1
q <- 0.99 # frequency of allele 2
a <- 1
d <- -1
h <- (1 - d/a)/2 # dominance factor
s <- 0.2 # Stays constant for whole experiment
W11 <-  1
W12 <-  1 - h*s
W22 <-  1 - s
Wbar <- p[1]^2 * W11 + 2*p[1]*q[1]*W12 + q[1]^2*W22
Vd <- (2*p*q*d)^2 # Dominance genetic variation
Va <- 2*p*q*(a + d*(q - p))^2 # Additive genetic variation
h2 <- Va/(Va + Vd) # Heritability
# Iterate
for (i in 2:gen){
p[i] <- pnext(p = p[i-1], q = q[i-1], W11 = W11, W12 = W12, W22 = W22)
q[i] <- 1 - p[i]
Wbar[i] <- p[i]^2 * W11 + 2*p[i]*q[i]*W12 + q[i]^2*W22
Vd[i] <- (2*p[i]*q[i]*d)^2
Va[i] <- 2*p[i]*q[i]*(a + d*(q[i]-p[i]))^2
h2[i] <- Va[i]/(Va[i] + Vd[i])
}
(df <- data.frame(gen = 1:gen, p, q, Wbar, Va, Vd))
df <- cbind(df, h2)
df2 <- gather(subset(df, select = -c(q, Wbar)), key = metric, value = value, p:h2)
ggplot(df2, aes(x = gen, y = value, group = metric)) +
geom_line(aes(linetype = metric)) +
scale_linetype_manual("", breaks = c("p", "Va", "Vd", "h2"),
values = c("dashed", "solid", "dotted", "dotdash"),
labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:5)*50) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
# Allele 1 is recessive
gen <- 600
p <- 0.01 # frequency of allele 1
q <- 0.99 # frequency of allele 2
a <- 1
d <- -1
h <- (1 - d/a)/2 # dominance factor
s <- 0.2 # Stays constant for whole experiment
W11 <-  1
W12 <-  1 - h*s
W22 <-  1 - s
Wbar <- p[1]^2 * W11 + 2*p[1]*q[1]*W12 + q[1]^2*W22
Vd <- (2*p*q*d)^2 # Dominance genetic variation
Va <- 2*p*q*(a + d*(q - p))^2 # Additive genetic variation
h2 <- Va/(Va + Vd) # Heritability
# Iterate
for (i in 2:gen){
p[i] <- pnext(p = p[i-1], q = q[i-1], W11 = W11, W12 = W12, W22 = W22)
q[i] <- 1 - p[i]
Wbar[i] <- p[i]^2 * W11 + 2*p[i]*q[i]*W12 + q[i]^2*W22
Vd[i] <- (2*p[i]*q[i]*d)^2
Va[i] <- 2*p[i]*q[i]*(a + d*(q[i]-p[i]))^2
h2[i] <- Va[i]/(Va[i] + Vd[i])
}
(df <- data.frame(gen = 1:gen, p, q, Wbar, Va, Vd))
df <- cbind(df, h2)
df2 <- gather(subset(df, select = -c(q, Wbar)), key = metric, value = value, p:h2)
ggplot(df2, aes(x = gen, y = value, group = metric)) +
geom_line(aes(linetype = metric)) +
scale_linetype_manual("", breaks = c("p", "Va", "Vd", "h2"),
values = c("dashed", "solid", "dotted", "dotdash"),
labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:6)*100) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
# Allele 1 is recessive
gen <- 1000
p <- 0.01 # frequency of allele 1
q <- 0.99 # frequency of allele 2
a <- 1
d <- -1
h <- (1 - d/a)/2 # dominance factor
s <- 0.2 # Stays constant for whole experiment
W11 <-  1
W12 <-  1 - h*s
W22 <-  1 - s
Wbar <- p[1]^2 * W11 + 2*p[1]*q[1]*W12 + q[1]^2*W22
Vd <- (2*p*q*d)^2 # Dominance genetic variation
Va <- 2*p*q*(a + d*(q - p))^2 # Additive genetic variation
h2 <- Va/(Va + Vd) # Heritability
# Iterate
for (i in 2:gen){
p[i] <- pnext(p = p[i-1], q = q[i-1], W11 = W11, W12 = W12, W22 = W22)
q[i] <- 1 - p[i]
Wbar[i] <- p[i]^2 * W11 + 2*p[i]*q[i]*W12 + q[i]^2*W22
Vd[i] <- (2*p[i]*q[i]*d)^2
Va[i] <- 2*p[i]*q[i]*(a + d*(q[i]-p[i]))^2
h2[i] <- Va[i]/(Va[i] + Vd[i])
}
(df <- data.frame(gen = 1:gen, p, q, Wbar, Va, Vd))
df <- cbind(df, h2)
df2 <- gather(subset(df, select = -c(q, Wbar)), key = metric, value = value, p:h2)
ggplot(df2, aes(x = gen, y = value, group = metric)) +
geom_line(aes(linetype = metric)) +
scale_linetype_manual("", breaks = c("p", "Va", "Vd", "h2"),
values = c("dashed", "solid", "dotted", "dotdash"),
labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:10)*100) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
# Allele 1 is recessive
gen <- 600
p <- 0.01 # frequency of allele 1
q <- 0.99 # frequency of allele 2
a <- 1
d <- -1
h <- (1 - d/a)/2 # dominance factor
s <- 0.2 # Stays constant for whole experiment
W11 <-  1
W12 <-  1 - h*s
W22 <-  1 - s
Wbar <- p[1]^2 * W11 + 2*p[1]*q[1]*W12 + q[1]^2*W22
Vd <- (2*p*q*d)^2 # Dominance genetic variation
Va <- 2*p*q*(a + d*(q - p))^2 # Additive genetic variation
h2 <- Va/(Va + Vd) # Heritability
# Iterate
for (i in 2:gen){
p[i] <- pnext(p = p[i-1], q = q[i-1], W11 = W11, W12 = W12, W22 = W22)
q[i] <- 1 - p[i]
Wbar[i] <- p[i]^2 * W11 + 2*p[i]*q[i]*W12 + q[i]^2*W22
Vd[i] <- (2*p[i]*q[i]*d)^2
Va[i] <- 2*p[i]*q[i]*(a + d*(q[i]-p[i]))^2
h2[i] <- Va[i]/(Va[i] + Vd[i])
}
df <- data.frame(gen = 1:gen, p, q, Wbar, Va, Vd)
head(df)
df <- cbind(df, h2)
df2 <- gather(subset(df, select = -c(q, Wbar)), key = metric, value = value, p:h2)
ggplot(df2, aes(x = gen, y = value, group = metric)) +
geom_line(aes(linetype = metric)) +
scale_linetype_manual("", breaks = c("p", "Va", "Vd", "h2"),
values = c("dashed", "solid", "dotted", "dotdash"),
labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:10)*600) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
tail(df)
# Allele 1 is recessive
gen <- 600
p <- 0.01 # frequency of allele 1
q <- 0.99 # frequency of allele 2
a <- 1
d <- -1
h <- (1 - d/a)/2 # dominance factor
s <- 0.2 # Stays constant for whole experiment
W11 <-  1
W12 <-  1 - h*s
W22 <-  1 - s
Wbar <- p[1]^2 * W11 + 2*p[1]*q[1]*W12 + q[1]^2*W22
Vd <- (2*p*q*d)^2 # Dominance genetic variation
Va <- 2*p*q*(a + d*(q - p))^2 # Additive genetic variation
h2 <- Va/(Va + Vd) # Heritability
# Iterate
for (i in 2:gen){
p[i] <- pnext(p = p[i-1], q = q[i-1], W11 = W11, W12 = W12, W22 = W22)
q[i] <- 1 - p[i]
Wbar[i] <- p[i]^2 * W11 + 2*p[i]*q[i]*W12 + q[i]^2*W22
Vd[i] <- (2*p[i]*q[i]*d)^2
Va[i] <- 2*p[i]*q[i]*(a + d*(q[i]-p[i]))^2
h2[i] <- Va[i]/(Va[i] + Vd[i])
}
df <- data.frame(gen = 1:gen, p, q, Wbar, Va, Vd)
head(df)
df <- cbind(df, h2)
df2 <- gather(subset(df, select = -c(q, Wbar)), key = metric, value = value, p:h2)
ggplot(df2, aes(x = gen, y = value, group = metric)) +
geom_line(aes(linetype = metric)) +
scale_linetype_manual("", breaks = c("p", "Va", "Vd", "h2"),
values = c("dashed", "solid", "dotted", "dotdash"),
labels = c("p", expression("V"[a]),
expression("V"[d]), expression("h"^2))) +
scale_x_continuous("Generations",
expand = c(0, 0),
breaks = (1:6)*100) +
scale_y_continuous("p, allele 1 frequency",
expand = c(0, 0),
limits = c(0, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_line(colour = "black"))
0.2/(0.7*0.8-0.2)
0.2/(0.7*0.8-0.2) *2
0.2/(0.7*0.8-0.2) *1.8
0.2/(0.7*3-0.2) *1.8
0.2/(0.7*3-0.2) *4
0.2/(0.7*3-0.5) *4
0.5/(0.7*3-0.5) *4
# Load packages and functions, setup environment
source("code/functions.R")
## Ford Fishman
## December 16, 2019
## Common functions used across scripts
require("png")
require("grid")
require("tidyr")
require("ggplot2")
require("viridis")
require("scales")
## Setup environment
rm(list=ls()) # removes all objects in the given environment
wd <- "~/GitHub/MicroSpeciation"
data_dir <- paste(wd, "/data/", sep = "")
figure_dir <- paste(wd, "/figures/", sep = "")
getwd()
setwd(wd)
# Load packages and functions, setup environment
source("code/functions.R")
require(fitdistrplus)
require(goft)
require(actuar)
## simulations
# extract information about intensitera_lengths and era length from the extinction data
ext_list <- importRohdeMuller()
avg_ext <- ext_list$avg_ext
peak_ext <- ext_list$peak_ext
era_lengths <- ext_list$era_lengths
era_means <- ext_list$era_means
original <- ext_list$original
EeStart <- as.integer(names(avg_ext[1])) # first year with extinction data
## Simulate simulation events for first 3.5 billion era_lengthsears
ggplot(NULL,aes(x=era_lengths))+geom_dotplot(size=0.1)
ggplot(NULL,aes(x=era_means))+geom_dotplot()
lm1 <- lm(era_lengths~era_means)
summarera_lengths(lm1)
t.means <- table(era_means)
df.means <- as.data.frame(t.means)
o_freq.means <- c(0,df.means$Freq)
x <- era_means
descdist(x, discrete = F)
fit.gamma <- fitdist(x,"gamma")
plot(fit.gamma)
fit.gamma$aic
gamma_fit(x)
n.sims <- 5e4
fit.invgauss.means <- fitdist(era_means,"invgauss",start=list(mean = 10, shape = 12))
plot(fit.invgauss.means)
hist(era_means,freq = F, breaks = 50)
fit.invgauss.means.D <- dinvgauss(1:50,mean = fit.invgauss.means$estimate[1],shape = fit.invgauss.means$estimate[2])
lines(fit.invgauss.means.D,col = "violet")
fit.invgauss$aic
## era lengths
t.lengths <- table(era_lengths)
df.lengths <- as.data.frame(t.lengths)
o_freq.lengths <- c(0,df.lengths$Freq,rep(0,20))
descdist(era_lengths,discrete = T)
fit.nbinom <- fitdist(era_lengths,"nbinom",discrete = T)
fit.nbinom.D <- dnbinom(1:10,size=fit.nbinom$estimate[1],mu=fit.nbinom$estimate[2])
hist(era_lengths,prob=T,breaks=10)
lines(fit.nbinom.D, col = "blue")
fit.nbinom.D <- dnbinom(0:30,size=fit.nbinom$estimate[1],mu=fit.nbinom$estimate[2])
chisq.test(o_freq.lengths, p=fit.nbinom.D)
fit.poisson <- fitdist(era_lengths,"pois",discrete = T)
fit.poisson.D <- dpois(1:10,lambda = fit.poisson$estimate)
hist(era_lengths,prob=T,breaks=10)
lines(fit.poisson.D, col = "red")
plot(fit.poisson)
fit.gamma <- fitdist(era_lengths,"gamma",discrete = T)
fit.gamma.D <- dgamma(1:10,shape = fit.gamma$estimate[1],rate = fit.gamma$estimate[2])
lines(fit.gamma.D,col="green")
plot(fit.gamma)
fit.invgauss <- fitdist(era_lengths,"invgauss", start=list(mean = 2, shape = 4),discrete = T)
summary(fit.invgauss)
fit.invgauss.D <- dinvgauss(1:10,mean = fit.invgauss$estimate[1],shape = fit.invgauss$estimate[2])
lines(fit.invgauss.D,col="violet")
years = 0
sim_lengths.pool <- round(rinvgauss(3000, mean = fit.invgauss$estimate[1],shape = fit.invgauss$estimate[2]))
sim_lengths <- c()
for (i in sim_lengths.pool){
if (years >= EeStart-1) break
sim_lengths <- c(sim_lengths, i)
years=sum(sim_lengths)
}
a <- length(sim_lengths)
sim_lengths[a] <- (EeStart-1) - sum(sim_lengths[1:a-1])
sim_intensity <- rinvgauss(sim_lengths,mean = fit.invgauss.means$estimate[1],shape = fit.invgauss.means$estimate[2])
extinction_max <- c()
for(i in 1:a){
if (sim_lengths[i]!=0){
extinction_max <- c(extinction_max, rep(sim_intensity[i],sim_lengths[i]))
}
}
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
summary(extinction_max)
summary(original*100)
times <- EeStart:4000
summary(lm(original~times))
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
rm(list=ls()) # removes all objects in the given environment
wd <- "~/GitHub/MicroSpeciation"
data_dir <- paste(wd, "/data/", sep = "")
figure_dir <- paste(wd, "/figures/", sep = "")
getwd()
setwd(wd)
# Load packages
require("png")
require("grid")
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(viridis))
# Used for binning into colors for heatmap
rounding_scheme <- function(S){
logS <-  log10(S)
# roundS <- ifelse(logS > 30, 30, logS) # Anything >10^30 is one color
roundS <- ifelse(logS > 23, 23, logS) # Anything <10^30 and >10^20 is another color
roundS <- ifelse(roundS < 4, 4, roundS) # can't be less than 0
roundS <- floor(roundS) # round down order of magnitude
return(data.frame(logS, roundS))
}
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
# epsilon <- 10^runif(n = 40000, min = -1, max = -0.05) # mu/lambda
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
df1 <- data.frame(lambda, epsilon, mu, r, S)
df1 <- cbind(df1, rounding_scheme(S))
# heatmap made from scatter plot
(p1 <- ggplot(data = df1, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/Myr)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig1_dir <- paste(figure_dir, "LambdaVSEpsilon_ConstantRatesHeatmap.png", sep = "")
ggsave(plot = p1, filename = fig1_dir, width = 7, height = 5)
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- 0.9
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
summary(log10(S))
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
source('~/GitHub/MicroSpeciation/code/ExtinctionSim.R')
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
xlab("Time (My)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
ggplot(NULL, aes(x=1:4000,y=c(extinction_max, original*100))) +
geom_line()+
geom_vline(xintercept = EeStart, linetype = "dashed", color = "red") +
xlab("Time (My)") +
ylab("Extinction Intensity (%)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "bottom",
axis.line = element_line(colour = "black"),
axis.line.y.right = element_line(color = "grey"),
axis.ticks.y.right = element_line(color = "grey")
)
hist(era_means,freq = F, breaks = 50)
fit.invgauss.means.D <- dinvgauss(1:50,mean = fit.invgauss.means$estimate[1],shape = fit.invgauss.means$estimate[2])
lines(fit.invgauss.means.D,col = "violet")
descdist(era_means, discrete = F)
summary(fit.gamma)
fit.gamma.D <- dgamma(1:50,shape = fit.gamma$estimate[1],rate = fit.gamma$estimate[2])
fit.invgauss.means <- fitdist(era_means,"invgauss",start=list(mean = 10, shape = 12)) # inverse gaussian fit
plot(fit.invgauss.means)
hist(era_means,freq = F, breaks = 50)
fit.invgauss.means.D <- dinvgauss(1:50,mean = fit.invgauss.means$estimate[1],shape = fit.invgauss.means$estimate[2])
lines(fit.invgauss.means.D,col = "violet")
lines(fit.gamma.D,col = "red")
# fitting era lengths to a distribution
t.lengths <- table(era_lengths)
df.lengths <- as.data.frame(t.lengths)
o_freq.lengths <- c(0,df.lengths$Freq,rep(0,20))
descdist(era_lengths,discrete = T)
fit.nbinom <- fitdist(era_lengths,"nbinom",discrete = T) # negative binomial
fit.nbinom.D <- dnbinom(1:10,size=fit.nbinom$estimate[1],mu=fit.nbinom$estimate[2])
hist(era_lengths,prob=T,breaks=10)
lines(fit.nbinom.D, col = "blue")
fit.nbinom.D <- dnbinom(0:30,size=fit.nbinom$estimate[1],mu=fit.nbinom$estimate[2])
chisq.test(o_freq.lengths, p=fit.nbinom.D)
fit.poisson <- fitdist(era_lengths,"pois",discrete = T) # poisson
fit.poisson.D <- dpois(1:10,lambda = fit.poisson$estimate)
hist(era_lengths,prob=T,breaks=10)
lines(fit.poisson.D, col = "red")
plot(fit.poisson)
fit.gamma <- fitdist(era_lengths,"gamma",discrete = T) # gamma
fit.gamma.D <- dgamma(1:10,shape = fit.gamma$estimate[1],rate = fit.gamma$estimate[2])
lines(fit.gamma.D,col="green")
plot(fit.gamma)
fit.invgauss <- fitdist(era_lengths,"invgauss", start=list(mean = 2, shape = 4),discrete = T) # inverse gaussian
summary(fit.invgauss)
fit.invgauss.D <- dinvgauss(1:10,mean = fit.invgauss$estimate[1],shape = fit.invgauss$estimate[2])
lines(fit.invgauss.D,col="violet")
chisq.test(o_freq.lengths, p=fit.nbinom.D)
hist(era_lengths,prob=T,breaks=10)
lines(fit.nbinom.D, col = "blue")
lines(fit.invgauss.D,col="violet")
lines(fit.poisson.D, col = "red")
lines(fit.gamma.D,col="green")
