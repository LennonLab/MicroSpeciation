S <- integer(length = 400000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
}
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
}
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 0.9) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
### VARIABLE EXTINCTION w/ SOME FIXED EXTINCTION
lambda <- runif(n = 400000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 400000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 400000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
}
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
}
### VARIABLE EXTINCTION w/ SOME FIXED EXTINCTION
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
}
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
}
df3 <- data.frame(lambda, epsilon, mu, r, S)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 1.2) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 1.5) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
avg_ext
### VARIABLE EXTINCTION w/ SOME FIXED EXTINCTION
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
r <- lambda # diversification rate is just lambda
S <- S * exp(r)* (1 - ep) # ep % of population dies
}
}
df3 <- data.frame(lambda, epsilon, mu, r, S)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
summary(1 - avg_ext)
summary(avg_ext)
# Load data for extinction events
# Say x is diversity and y is extinction intensity for an era lasting 3 years
# Current dataset has data like the following for an era lasting 3 My:
# Time  Diversity   ExtinctionIntensity
# t     x           y
# t+1   x           y
# t+2   x           y
# I'm altering it to look like this to spread out extinction over
# the entire length of the era:
# Time  ExtinctionIntensity
# t     y/3
# t+1   y/3
# t+1   y/3
ext_file <- paste(data_dir, "Extinction_Rohde_Muller_raw.csv", sep = "")
ext <- read.csv(ext_file)
avg_ext <- c()
# Average out exitinction percentage over entire time period
for (i in 1:nrow(ext)){
if (i == 1){
# First entry in the dataframe starts a paleontologic era
era <- c(ext$ExtinctionIntensity[i])
# For all entries after the first:
} else {
# I assume that when either ExtinctionIntensity or Diversity changes,
# then a new era has begun, otherwise, an era continues
if (ext$Diversity[i] == ext$Diversity[i-1] & ext$ExtinctionIntensity[i] == ext$ExtinctionIntensity[i-1]) {
era <- c(era, ext$ExtinctionIntensity[i])
if (i == nrow(ext)) { # if the last entry is its own era
# integer(x) makes a vector of zeros of length x
# the mean of extinction intensity is evenly distributed over an era's duration
avg_ext <- c(avg_ext, integer(length(era)) + mean(era)/length(era))
}
} else { # if a new era is beginning
# Add previous era into vector
avg_ext <- c(avg_ext, integer(length(era)) + mean(era)/length(era))
era <- c(ext$ExtinctionIntensity[i]) # begin recording new era
if (i == nrow(ext)) { # if the last entry is part of another era
avg_ext <- c(avg_ext, integer(length(era)) + mean(era)/length(era))
}
}
}
}
# Add back into dataframe
ext <- cbind(ext, AverageExtinction = avg_ext)
ext$time <- as.character(4000 - ext$Mya)
names(avg_ext) <- ext$time
avg_ext <- avg_ext[order(names(avg_ext))]/100
### VARIABLE EXTINCTION w/ SOME FIXED EXTINCTION
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if epsilon is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep) # don't want epsilon above 0.9
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
r <- lambda # diversification rate is just lambda
S <- S * exp(r)* (1 - ep) # ep % of population dies
}
}
df3 <- data.frame(lambda, epsilon, mu, r, S)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
df3$roundS
unique(df3$roundS)
# Used for binning into colors for heatmap
rounding_scheme <- function(S){
logS <-  log10(S)
# roundS <- ifelse(logS > 30, 30, logS) # Anything >10^30 is one color
roundS <- ifelse(roundS > 20, 20, roundS) # Anything <10^30 and >10^20 is another color
roundS <- ifelse(roundS < 0, 0, roundS) # can't be less than 0
roundS <- floor(roundS) # round down order of magnitude
return(data.frame(logS, roundS))
}
lambda <- runif(n = 400000, min = 0.008, max = 0.031) # speciation rates
# epsilon <- 10^runif(n = 40000, min = -1, max = -0.05) # mu/lambda
epsilon <- runif(n = 400000, min = 0.1, max = 0.9) # mu/lambda
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
df1 <- data.frame(lambda, epsilon, mu, r, S)
df1 <- cbind(df1, rounding_scheme(S))
# Used for binning into colors for heatmap
rounding_scheme <- function(S){
logS <-  log10(S)
# roundS <- ifelse(logS > 30, 30, logS) # Anything >10^30 is one color
roundS <- ifelse(logS > 20, 20, logS) # Anything <10^30 and >10^20 is another color
roundS <- ifelse(roundS < 0, 0, roundS) # can't be less than 0
roundS <- floor(roundS) # round down order of magnitude
return(data.frame(logS, roundS))
}
lambda <- runif(n = 400000, min = 0.008, max = 0.031) # speciation rates
# epsilon <- 10^runif(n = 40000, min = -1, max = -0.05) # mu/lambda
epsilon <- runif(n = 400000, min = 0.1, max = 0.9) # mu/lambda
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
df1 <- data.frame(lambda, epsilon, mu, r, S)
df1 <- cbind(df1, rounding_scheme(S))
# heatmap made from scatter plot
(p1 <- ggplot(data = df1, aes(x = lambda, y = epsilon, color = as.double(roundS))) +
geom_point(size = 0.4) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig1_dir <- paste(figure_dir, "LambdaVSEpsilon_ConstantRatesHeatmap.png", sep = "")
ggsave(plot = p1, filename = fig1_dir, width = 7, height = 5)
# heatmap made from scatter plot
(p1 <- ggplot(data = df1, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 0.4) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)", discrete = T) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
lambda <- runif(n = 400000, min = 0.008, max = 0.031) # speciation rates
# epsilon <- 10^runif(n = 40000, min = -1, max = -0.05) # mu/lambda
epsilon <- runif(n = 400000, min = 0.1, max = 0.9) # mu/lambda
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
df1 <- data.frame(lambda, epsilon, mu, r, S)
df1 <- cbind(df1, rounding_scheme(S))
# heatmap made from scatter plot
(p1 <- ggplot(data = df1, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 0.4) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig1_dir <- paste(figure_dir, "LambdaVSEpsilon_ConstantRatesHeatmap.png", sep = "")
ggsave(plot = p1, filename = fig1_dir, width = 7, height = 5)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
df3 <- data.frame(lambda, epsilon, mu, r, S)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
### VARIABLE EXTINCTION w/ SOME FIXED EXTINCTION
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
EeStart <- as.integer(names(avg_ext[1])) # first year with data
# Simulate, but replace random background extinction levels
# with "known" extinction rates for macroorganisms for "recent" years
for(t in 2:4000) {
if (t < EeStart){ # before data, make extinction be random
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if epsilon is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep) # don't want epsilon above 0.9
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
} else { # when extinction data starts, use it in place of random data
ep <- avg_ext[t - EeStart + 1]
r <- lambda # diversification rate is just lambda
S <- S * exp(r)* (1 - ep) # ep % of population dies
}
}
df3 <- data.frame(lambda, epsilon, mu, r, S)
df3 <- cbind(df3, rounding_scheme(S))
# heatmap 3
(p3 <- ggplot(data = df3, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
# ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
fig3_dir <- paste(figure_dir, "LambdaVSEpsilon_EeVariableRatesHeatmap.png", sep = "")
ggsave(plot = p3, filename = fig3_dir, width = 7, height = 5)
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
# epsilon <- 10^runif(n = 40000, min = -1, max = -0.05) # mu/lambda
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- lambda * epsilon # extinction rates
r <- lambda - mu # diversification rate
S0 <- 1
S <- S0 * exp(r*4000) # Species richness under exponential growth (pure birth)
df1 <- data.frame(lambda, epsilon, mu, r, S)
df1 <- cbind(df1, rounding_scheme(S))
# heatmap made from scatter plot
(p1 <- ggplot(data = df1, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig1_dir <- paste(figure_dir, "LambdaVSEpsilon_ConstantRatesHeatmap.png", sep = "")
ggsave(plot = p1, filename = fig1_dir, width = 7, height = 5)
### VARIABLE EXTINCTION
# Note: reduce number of simulations to reduce run time
# I used 400000 to make the heatmap more smooth
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
for(t in 2:4000) {
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.05) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
# if (t == 4000){
#   S <- c(S, Species)
# }
}
df2 <- data.frame(lambda, epsilon, mu, r, S)
df2 <- cbind(df2, rounding_scheme(S))
# heatmap 2
(p2 <- ggplot(data = df2, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig2_dir <- paste(figure_dir, "LambdaVSEpsilon_VariableRatesHeatmap.png", sep = "")
ggsave(plot = p2, filename = fig2_dir, width = 7, height = 5)
### VARIABLE EXTINCTION
# Note: reduce number of simulations to reduce run time
# I used 400000 to make the heatmap more smooth
lambda <- runif(n = 400000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 400000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 400000) + 1 # keeps track of species for each set of parameters
for(t in 2:4000) {
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.2) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
}
### VARIABLE EXTINCTION
# Note: reduce number of simulations to reduce run time
# I used 400000 to make the heatmap more smooth
lambda <- runif(n = 40000, min = 0.008, max = 0.031) # speciation rates
epsilon <- runif(n = 40000, min = 0.1, max = 0.9) # mu/lambda
mu <- c() # extinction rates
r <- c()
S <- integer(length = 40000) + 1 # keeps track of species for each set of parameters
for(t in 2:4000) {
ep <- rnorm(n = epsilon, mean = epsilon, sd = 0.2) # give me an epsilon near the actual epsilon for all simulations per time step
ep <- ifelse(ep<0,0.01,ep) # if Eb is ever less than 0, make it 0.1
ep <- ifelse(ep>1,0.9,ep)
mu <- lambda * ep
r <- lambda - mu # diversification rate
S <- S * exp(r) # discrete exponential growth, pure birth
}
df2 <- data.frame(lambda, epsilon, mu, r, S)
df2 <- cbind(df2, rounding_scheme(S))
# heatmap 2
(p2 <- ggplot(data = df2, aes(x = lambda, y = epsilon, color = roundS)) +
geom_point(size = 1.8) +
xlab(expression(lambda*" (Species/My)")) +
scale_y_continuous(expression(epsilon), breaks = c(0.1, 0.3, 0.5, 0.7, 0.9)) +
scale_color_viridis("Log(Richness)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "right",
axis.line = element_blank())
)
# Save figure
fig2_dir <- paste(figure_dir, "LambdaVSEpsilon_VariableRatesHeatmap.png", sep = "")
ggsave(plot = p2, filename = fig2_dir, width = 7, height = 5)
